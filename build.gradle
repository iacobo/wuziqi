buildscript {
    ext.kotlin_version = '2.1.10' // Latest kotlin version as of March 2025
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.9.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.9.0' apply false
    id 'com.android.library' version '8.9.0' apply false
    id 'org.jetbrains.kotlin.android' version '2.1.10' apply false
}

// Add task to update proguard rules for all subprojects that apply the android plugin
subprojects { subproject ->
    subproject.plugins.withId('com.android.application') {
        subproject.tasks.register('updateProguardRules') {
            doLast {
                def proguardFile = subproject.file('proguard-rules.pro')
                def iconRules = """
# Keep used icons from material-icons-extended
-keep class androidx.compose.material.icons.filled.** { *; }
-keep class androidx.compose.material.icons.automirrored.filled.** { *; }
"""
                if (!proguardFile.exists()) {
                    proguardFile.createNewFile()
                    proguardFile.text = iconRules
                } else if (!proguardFile.text.contains("Keep used icons from material-icons-extended")) {
                    proguardFile.append(iconRules)
                }
            }
        }
        
        // Make the task run before each build
        subproject.afterEvaluate {
            subproject.tasks.named('preBuild').configure {
                dependsOn 'updateProguardRules'
            }
        }
    }
}

// Fix for deprecated buildDir
tasks.register('clean') {
    doLast {
        // Use project.layout.buildDirectory instead of rootProject.buildDir
        delete project.layout.buildDirectory
    }
}

// Add Gradle properties to improve build performance
allprojects {
    // Add this block to ensure consistent settings for all subprojects
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}